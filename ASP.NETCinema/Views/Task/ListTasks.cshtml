@model IEnumerable<ASPNETCinema.ViewModels.TaskViewModel>

@{
    ViewData["Title"] = "ListTasks";
}

<h2>ListTasks</h2>

<p>
    <a asp-action="AddTask">Create New</a>
</p>

<div id="container" style="background-color: #2b3e50; margin-left: -1000px; ">
    <div id="navbar" style=" width: 400%; height: 45px; padding-top: 8px; padding-left: 1000px;">
        <button href="javascript:void(0)" class="tablink" onclick="openPage('FullList', this, 'red')" id="defaultOpen">Full List</button>
        <button href="javascript:void(0)" class="tablink" onclick="openPage('AssignedTasks', this, 'green')">Assigned Tasks</button>
        <button href="javascript:void(0)" class="tablink" onclick="openPage('UnassignedTasks', this, 'blue')">Unassigned Tasks</button>
        <button href="javascript:void(0)" class="tablink" onclick="openPage('TaskTypeNotSelected', this, 'orange')">TaskTypes Not Selected</button>
        <button href="javascript:void(0)" class="tablink" onclick="openPage('UnassignedEmployees', this, 'orange')">Unassigned Employees</button>
    </div>
</div>

<div id="FullList" class="tabcontent">
    <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search for names..">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EmployeeId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EmployeeName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TaskType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateOfScreening)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TimeOfScreening)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.HallId)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                @if (item.DateOfScreening >= DateTime.Now.AddYears(-100))
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>
                        @if (item.EmployeeId == 0)
                        {
                            <td>
                                NA
                            </td>
                        }
                        else
                        {
                            <td>
                                @Html.DisplayFor(modelItem => item.EmployeeId)
                            </td>
                        }

                        @if (item.EmployeeId == 0)
                        {
                            <td>
                                NA
                            </td>
                        }
                        else
                        {
                            <td>
                                @Html.DisplayFor(modelItem => item.EmployeeName)
                            </td>
                        }
                        <td>
                            @Html.DisplayFor(modelItem => item.TaskType)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateOfScreening)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TimeOfScreening)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.HallId)
                        </td>
                        <td>
                            @if (User.IsInRole("Administrator"))
                            {
                                @Html.ActionLink("Edit", "EditTask", new { id = item.Id });
                                <a> | </a>
                                @Html.ActionLink("Delete", "DeleteTask", new { id = item.Id });
                                <a> | </a>
                            }
                            @Html.ActionLink("Details", "DetailsTask", new { id = item.Id })

                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

</div>

<div id="AssignedTasks" class="tabcontent">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EmployeeId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EmployeeName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TaskType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateOfScreening)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TimeOfScreening)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.HallId)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                @if (item.EmployeeName != "Unassigned" && item.DateOfScreening >= DateTime.Now.AddYears(-100))
                {

                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmployeeId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmployeeName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TaskType)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateOfScreening)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TimeOfScreening)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.HallId)
                        </td>
                        <td>
                            @if (User.IsInRole("Administrator"))
                            {
                                @Html.ActionLink("Edit", "EditTask", new { id = item.Id });
                                <a> | </a>
                                @Html.ActionLink("Delete", "DeleteTask", new { id = item.Id });
                                <a> | </a>
                            }
                            @Html.ActionLink("Details", "DetailsTask", new { id = item.Id })

                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<div id="UnassignedTasks" class="tabcontent">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EmployeeId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EmployeeName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TaskType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateOfScreening)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TimeOfScreening)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.HallId)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                @if (item.EmployeeName == "Unassigned" && item.DateOfScreening >= DateTime.Now.AddYears(-100))
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>
                        @if (item.EmployeeId == 0)
                        {
                            <td>
                                NA
                            </td>
                        }
                        else
                        {
                            <td>
                                @Html.DisplayFor(modelItem => item.EmployeeId)
                            </td>
                        }

                        @if (item.EmployeeId == 0)
                        {
                            <td>
                                NA
                            </td>
                        }
                        else
                        {
                            <td>
                                @Html.DisplayFor(modelItem => item.EmployeeName)
                            </td>
                        }
                        <td>
                            @Html.DisplayFor(modelItem => item.TaskType)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateOfScreening)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TimeOfScreening)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.HallId)
                        </td>
                        <td>
                            @if (User.IsInRole("Administrator"))
                            {
                                @Html.ActionLink("Edit", "EditTask", new { id = item.Id });
                                <a> | </a>
                                @Html.ActionLink("Delete", "DeleteTask", new { id = item.Id });
                                <a> | </a>
                            }
                            @Html.ActionLink("Details", "DetailsTask", new { id = item.Id })

                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<div id="TaskTypeNotSelected" class="tabcontent">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EmployeeId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EmployeeName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TaskType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateOfScreening)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TimeOfScreening)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.HallId)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                @if (item.TaskType == "No TaskType Assigned" && item.DateOfScreening >= DateTime.Now.AddYears(-100))
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>
                        @if (item.EmployeeId == 0)
                        {
                            <td>
                                NA
                            </td>
                        }
                        else
                        {
                            <td>
                                @Html.DisplayFor(modelItem => item.EmployeeId)
                            </td>
                        }

                        @if (item.EmployeeId == 0)
                        {
                            <td>
                                NA
                            </td>
                        }
                        else
                        {
                            <td>
                                @Html.DisplayFor(modelItem => item.EmployeeName)
                            </td>
                        }
                        <td>
                            @Html.DisplayFor(modelItem => item.TaskType)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateOfScreening)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TimeOfScreening)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.HallId)
                        </td>
                        <td>
                            @if (User.IsInRole("Administrator"))
                            {
                                @Html.ActionLink("Edit", "EditTask", new { id = item.Id });
                                <a> | </a>
                                @Html.ActionLink("Delete", "DeleteTask", new { id = item.Id });
                                <a> | </a>
                            }
                            @Html.ActionLink("Details", "DetailsTask", new { id = item.Id })

                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<div id="UnassignedEmployees" class="tabcontent">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EmployeeId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EmployeeName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TaskType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateOfScreening)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TimeOfScreening)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.HallId)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                @if (item.DateOfScreening <= DateTime.Now.AddYears(-100))
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmployeeId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmployeeName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TaskType)
                        </td>
                        <td>
                            NA
                        </td>
                        <td>
                            NA
                        </td>
                        <td>
                            NA
                        </td>
                        <td>
                            @if (User.IsInRole("Administrator"))
                            {
                                @Html.ActionLink("Edit", "EditTask", new { id = item.Id });
                                <a> | </a>
                                @Html.ActionLink("Delete", "DeleteTask", new { id = item.Id });
                                <a> | </a>
                            }
                            @Html.ActionLink("Details", "DetailsTask", new { id = item.Id })

                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>


<script>
    function openPage(pageName, elmnt, color) {
        // Hide all elements with class="tabcontent" by default */
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        // Remove the background color of all tablinks/buttons
        tablinks = document.getElementsByClassName("tablink");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].style.backgroundColor = "#4e5d6c";
        }

        // Show the specific tab content
        document.getElementById(pageName).style.display = "block";

        // Add the specific color to the button used to open the tab content
        elmnt.style.backgroundColor = color;
    }

    // Get the element with id="defaultOpen" and click on it
    document.getElementById("defaultOpen").click();</script>

<!--Search Filter-->
<script>
    function myFunction() {
        // Declare variables
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("table");
        tr = table.getElementsByTagName("tr");

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>

    <style>

        .filter-table .quick {
            margin-left: 0.5em;
            font-size: 0.8em;
            text-decoration: none;
        }



        .fitler-table .quick:hover {
            text-decoration: underline;
        }



        td.alt {
            background-color: #ffc;
            background-color: rgba(255, 255, 0, 0.2);
        }
    </style>







    <script src="@Url.Content("~/Scripts/filtertable/jquery.filtertable.min.js")" type="text/javascript"></script>

    <script type="text/javascript">

        $(document).ready(function () {

            $('#FullList').filterTable();

        });

    </script>

    <!--onscroll navbar-->
    <script>
        window.onscroll = function () { myFunction() };

        var navbar = document.getElementById("navbar");
        var container = document.getElementById("container");
        var sticky = navbar.offsetTop;

        function myFunction() {
            if (window.pageYOffset >= sticky) {
                navbar.classList.add("sticky")
                navbar.style.backgroundColor = "#df691a";
                navbar.style.borderTop = "5px solid black";
            } else {
                navbar.classList.remove("sticky");
                navbar.style.backgroundColor = "#2b3e50";
                navbar.style.borderTop = "0px";
            }
        }
    </script>